<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/context
       https://www.springframework.org/schema/context/spring-context.xsd
       http://www.springframework.org/schema/mvc
       https://www.springframework.org/schema/mvc/spring-mvc.xsd">
    <!--声明组件扫描器-->
    <context:component-scan base-package="com.ikuta.controller"/>

    <!--声明SpringMVC框架中的视图解析器[处理视图]-->
    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <!--前缀：视图文件的路径-->
        <property name="prefix" value="/WEB-INF/view/"/>
        <!--后缀：视图文件的扩展名-->
        <property name="suffix" value=".jsp"/>
    </bean>

    <!--处理静态资源的第一种方式
    解决:SpringMVC配置文件中声明<mvc:default-servlet-handler />
    原理:
        1.声明<mvc:default-servlet-handler />后,SpringMVC框架在程序内存中创建DefaultServletHandler对象
        2.DefaultServletHandler对象将[请求]转发给TomCat的default这个Servlet
    注意:
        <mvc:default-servlet-handler/> 和 @RequestMapping注解 有冲突,需要在SpringMVC配置文件中声明注解驱动
    -->
    <!--声明<mvc:default-servlet-handler />-->
    <!--<mvc:default-servlet-handler/>-->
    <!--声明注解驱动-->
    <!--<mvc:annotation-driven/>-->

    <!--处理静态资源的第二种方式
    解决:在SpringMVC配置文件中声明<mvc:resources/>
    原理:
        1.声明<mvc:resources/>后,SpringMVC框架创建ResourceHttpRequestServlet处理器对象
        2.ResourceHttpRequestServlet处理器对象处理静态资源的访问,不依赖Tomcat服务器
    属性:
        1.mapping:访问静态资源的uri地址,使用通配符[**]
        2.location:静态资源的位置
    注意:
        <mvc:resources/> 和 @RequestMapping注解 有冲突,需要在SpringMVC配置文件中声明注解驱动
    -->
    <!--声明<mvc:resources/>-->
    <mvc:resources mapping="images/**" location="/images/" />
    <mvc:resources mapping="html/**" location="/html/" />
    <mvc:resources mapping="js/**" location="/js/" />
    <!--声明注解驱动-->
    <mvc:annotation-driven/>
    <!--一条配置处理所有静态资源-->
    <mvc:resources mapping="static/**" location="/static/" />
</beans>